{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccalefevers/Documents/SPRING2019/CIT 43600/kanban/src/components/projects.js\";\nimport React, { Component } from 'react';\nimport Images from './images';\nimport firebase from \"../fire\";\nimport { NavLink as RRNavLink } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\nimport './styles/syles.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport styled from 'styled-components';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState({\n        item: state\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const name = this.state.name;\n      const updateRef = firebase.firestore().collection('project1').doc(this.state.key);\n      updateRef.set({\n        name\n      }).then(itemRef => {\n        this.setState({\n          key: '',\n          name: ''\n        });\n        this.props.history.push(\"/show/\" + this.props.match.params.id);\n      }).catch(error => {\n        console.error(\"Error adding document: \", error);\n      });\n    };\n\n    this.onCollectionUpdate = querySnapshot => {\n      const project1 = [];\n      querySnapshot.forEach(doc => {\n        const _doc$data = doc.data(),\n              name = _doc$data.name,\n              price = _doc$data.price,\n              stock = _doc$data.stock,\n              image = _doc$data.image;\n\n        project1.push({\n          key: doc.id,\n          doc,\n          // DocumentSnapshot\n          name\n        });\n      });\n      this.setState({\n        project1\n      });\n    };\n\n    this.ref = firebase.firestore().collection('project1');\n    this.state = {\n      project1: [],\n      name: '',\n      key: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('project1').doc(this.props.match.params.id);\n    ref.get().then(doc => {\n      if (doc.exists) {\n        this.setState({\n          item: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  delete(id) {\n    firebase.firestore().collection('ShopItems').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\");\n    }).catch(error => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Projects - Looks like you should get started...\")), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-stripe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.users.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: RRNavLink,\n      className: \"nav-link\",\n      to: \"/board/\".concat(item.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), item.name))))))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/rebeccalefevers/Documents/SPRING2019/CIT 43600/kanban/src/components/projects.js"],"names":["React","Component","Images","firebase","NavLink","RRNavLink","Button","Modal","ModalHeader","ModalBody","ModalFooter","styled","Projects","constructor","props","onChange","e","state","target","name","value","setState","item","onSubmit","preventDefault","updateRef","firestore","collection","doc","key","set","then","itemRef","history","push","match","params","id","catch","error","console","onCollectionUpdate","querySnapshot","project1","forEach","data","price","stock","image","ref","componentDidMount","get","exists","isLoading","log","unsubscribe","onSnapshot","delete","toggle","prevState","modal","render","users","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Images from './images';\nimport firebase from \"../fire\";\nimport {NavLink as RRNavLink} from \"react-router-dom\";\nimport {NavLink} from 'react-router-dom';\nimport './styles/syles.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport styled from 'styled-components';\n\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('project1');\n        this.state = {\n            project1: [],\n            name: '',\n            key: '',\n        }\n    };\n\n\n    onChange = (e) => {\n        const state = this.state;\n        state[e.target.name] = e.target.value;\n        this.setState({item:state});\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name,  } = this.state;\n\n        const updateRef = firebase.firestore().collection('project1').doc(this.state.key);\n        updateRef.set({\n            name,\n\n\n\n        }).then((itemRef) => {\n            this.setState({\n                key: '',\n                name: '',\n\n            });\n            this.props.history.push(\"/show/\"+this.props.match.params.id)\n        })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    componentDidMount() {\n        const ref = firebase.firestore().collection('project1').doc(this.props.match.params.id);\n\n        ref.get().then((doc) => {\n            if (doc.exists) {\n                this.setState({\n                    item: doc.data(),\n                    key: doc.id,\n                    isLoading: false\n                });\n            } else {\n                console.log(\"No such document!\");\n            }\n        });\n\n\n\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n\n    }\n\n    onCollectionUpdate = (querySnapshot) => {\n        const project1 = [];\n        querySnapshot.forEach((doc) => {\n            const { name, price, stock, image } = doc.data();\n            project1.push({\n                key: doc.id,\n                doc, // DocumentSnapshot\n                name,\n\n            });\n        });\n\n        this.setState({\n            project1\n        });\n    };\n\n    delete(id){\n        firebase.firestore().collection('ShopItems').doc(id).delete().then(() => {\n            console.log(\"Document successfully deleted!\");\n            this.props.history.push(\"/\")\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n        });\n    }\n\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                        <h3 className=\"panel-title\">\n                            Projects - Looks like you should get started...\n                        </h3>\n                    </div>\n                    <div className=\"panel-body\">\n                        <table className=\"table table-stripe\">\n                            <tbody>\n                            {this.state.users.map(item =>\n                                <tr>\n                                    <td><NavLink tag={RRNavLink} className=\"nav-link\" to={`/board/${item.key}`}></NavLink>{item.name}</td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}